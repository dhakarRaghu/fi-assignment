openapi: 3.0.3
info:
  title: Inventory Management API
  version: 1.0.0
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username: { type: string, minLength: 3 }
                password: { type: string, minLength: 6 }
              required: [username, password]
      responses:
        '201': { description: User registered }
        '409': { description: User already exists }
  /login:
    post:
      summary: Login user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username: { type: string, minLength: 3 }
                password: { type: string, minLength: 6 }
              required: [username, password]
      responses:
        '200': { description: JWT token, content: { application/json: { schema: { type: object, properties: { access_token: { type: string } } } } } }
        '401': { description: Invalid credentials }
  /products:
    post:
      summary: Add a product
      security: [{ bearerAuth: [] }]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                type: { type: string }
                sku: { type: string }
                image_url: { type: string, format: uri }
                description: { type: string }
                quantity: { type: integer, minimum: 0 }
                price: { type: number, minimum: 0 }
              required: [name, type, sku, quantity, price]
      responses:
        '201': { description: Product created, content: { application/json: { schema: { type: object, properties: { product_id: { type: integer } } } } } }
        '409': { description: SKU exists }
    get:
      summary: Get products
      security: [{ bearerAuth: [] }]
      parameters:
        - name: page
          in: query
          schema: { type: integer, default: 1 }
        - name: pageSize
          in: query
          schema: { type: integer, default: 10 }
      responses:
        '200': { description: List of products, content: { application/json: { schema: { type: object, properties: { data: { type: array, items: { type: object } }, total: { type: integer }, page: { type: integer }, pageSize: { type: integer } } } } } }
  /products/{id}/quantity:
    put:
      summary: Update product quantity
      security: [{ bearerAuth: [] }]
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity: { type: integer, minimum: 0 }
              required: [quantity]
      responses:
        '200': { description: Quantity updated }
        '404': { description: Product not found }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT