openapi: 3.0.3
info:
  title: Inventory Management API
  version: 1.0.0
  description: Advanced API for managing inventory and user authentication with rate limiting and validation
servers:
  - url: http://localhost:8080/api
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '429':
          description: Too many requests
  /login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        '400':
          description: Invalid input
        '401':
          description: Invalid credentials
        '429':
          description: Too many requests
  /products:
    post:
      summary: Add a new product
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_id:
                    type: integer
                  message:
                    type: string
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '409':
          description: SKU already exists
        '429':
          description: Too many requests
    get:
      summary: Get all products
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  total:
                    type: integer
                  page:
                    type: integer
                  pageSize:
                    type: integer
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
  /products/{id}/quantity:
    put:
      summary: Update product quantity
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  minimum: 0
              required: [quantity]
      responses:
        '200':
          description: Quantity updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  quantity:
                    type: integer
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Product not found
        '429':
          description: Too many requests
components:
  schemas:
    UserCredentials:
      type: object
      properties:
        username:
          type: string
          minLength: 3
        password:
          type: string
          minLength: 6
      required: [username, password]
    ProductInput:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        type:
          type: string
        sku:
          type: string
          minLength: 1
        image_url:
          type: string
          format: uri
        description:
          type: string
        quantity:
          type: integer
          minimum: 0
        price:
          type: number
          exclusiveMinimum: 0
      required: [name, sku, quantity, price]
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
        sku:
          type: string
        image_url:
          type: string
        description:
          type: string
        quantity:
          type: integer
        price:
          type: number
        createdAt:
          type: string
          format: date-time
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT